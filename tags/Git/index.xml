<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Git on DebugTalk</title><link>https://debugtalk.com/tags/Git/</link><description>Recent content in Git on DebugTalk</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sat, 05 Aug 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://debugtalk.com/tags/Git/index.xml" rel="self" type="application/rss+xml"/><item><title>How to install a package from Github that has other github dependencies ?</title><link>https://debugtalk.com/post/How-to-install-a-package-from-Github-that-has-other-github-dependencies/</link><pubDate>Sat, 05 Aug 2017 00:00:00 +0000</pubDate><guid>https://debugtalk.com/post/How-to-install-a-package-from-Github-that-has-other-github-dependencies/</guid><description>最近在开发ApiTestEngine时遇到一个安装包依赖的问题，耗费了不少时间寻找解决方案，考虑到还算比较有普遍性，因此总结形成这篇文章。 从</description></item><item><title>【GIT技巧】清除历史提交记录中的敏感信息</title><link>https://debugtalk.com/post/clean-sensitive-data-from-git-history-commits/</link><pubDate>Fri, 17 Mar 2017 00:00:00 +0000</pubDate><guid>https://debugtalk.com/post/clean-sensitive-data-from-git-history-commits/</guid><description>背景介绍 在使用GitHub的过程中，假如某次提交代码时不小心将密码或SSH-key提交进了公共仓库。当然，希望这种事情永远也不会发生，但是如</description></item><item><title>深入浅出 Git 权限校验</title><link>https://debugtalk.com/post/head-first-git-authority-verification/</link><pubDate>Wed, 15 Jun 2016 00:00:00 +0000</pubDate><guid>https://debugtalk.com/post/head-first-git-authority-verification/</guid><description>借助上次“掉坑”的经历，我对Git权限校验的两种方式重头进行了梳理，形成了这篇总结记录。 在本地计算机与GitHub（或GitLab）进行通信</description></item><item><title>GitHub 权限校验失败给我的启发</title><link>https://debugtalk.com/post/trap-in-GitHub-authority-verification/</link><pubDate>Tue, 14 Jun 2016 00:00:00 +0000</pubDate><guid>https://debugtalk.com/post/trap-in-GitHub-authority-verification/</guid><description>背景描述 众所周知，在GitHub中，每个仓库都有两个地址，分别基于HTTPS协议和SSH协议，两个协议对应的URL地址（repository</description></item></channel></rss>