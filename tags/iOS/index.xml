<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>iOS on DebugTalk</title><link>https://debugtalk.com/tags/iOS/</link><description>Recent content in iOS on DebugTalk</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sun, 14 Aug 2016 00:00:00 +0000</lastBuildDate><atom:link href="https://debugtalk.com/tags/iOS/index.xml" rel="self" type="application/rss+xml"/><item><title>使用 Jenkins 实现持续集成构建检查</title><link>https://debugtalk.com/post/Jenkins-CI-Automation-Test/</link><pubDate>Sun, 14 Aug 2016 00:00:00 +0000</pubDate><guid>https://debugtalk.com/post/Jenkins-CI-Automation-Test/</guid><description>通过《使用Jenkins搭建iOS/Android持续集成打包平台》和《关于持续集成打包平台的Jenkins配置和构建脚本实现细节》两篇文章</description></item><item><title>从0到1搭建移动App功能自动化测试平台 (4)：自动化测试代码⎡工程化⎦</title><link>https://debugtalk.com/post/build-app-automated-test-platform-from-0-to-1-refactor-testcase-scripts/</link><pubDate>Thu, 28 Jul 2016 00:00:00 +0000</pubDate><guid>https://debugtalk.com/post/build-app-automated-test-platform-from-0-to-1-refactor-testcase-scripts/</guid><description>在本系列的上一篇文章中，我通过系统登录这一典型功能点，演示了编写自动化测试脚本的整个流程，并对测试脚本进行了初步优化。 在本文中，我将重点介绍</description></item><item><title>关于持续集成打包平台的 Jenkins 配置和构建脚本实现细节</title><link>https://debugtalk.com/post/iOS-Android-Packing-with-Jenkins-details/</link><pubDate>Tue, 26 Jul 2016 00:00:00 +0000</pubDate><guid>https://debugtalk.com/post/iOS-Android-Packing-with-Jenkins-details/</guid><description>在《使用Jenkins搭建iOS/Android持续集成打包平台》一文中，我对如何使用Jenkins搭建iOS/Android持续集成打包平</description></item><item><title>使用 Jenkins 搭建 iOS/Android 持续集成打包平台</title><link>https://debugtalk.com/post/iOS-Android-Packing-with-Jenkins/</link><pubDate>Tue, 28 Jun 2016 00:00:00 +0000</pubDate><guid>https://debugtalk.com/post/iOS-Android-Packing-with-Jenkins/</guid><description>背景描述 根据项目需求，现要在团队内部搭建一个统一的打包平台，实现对iOS和Android项目的打包。而且为了方便团队内部的测试包分发，希望在</description></item><item><title>从0到1搭建移动App功能自动化测试平台（3）：编写iOS自动化测试脚本</title><link>https://debugtalk.com/post/build-app-automated-test-platform-from-0-to-1-write-iOS-testcase-scripts/</link><pubDate>Mon, 30 May 2016 00:00:00 +0000</pubDate><guid>https://debugtalk.com/post/build-app-automated-test-platform-from-0-to-1-write-iOS-testcase-scripts/</guid><description>通过前面三篇文章，我们已经将iOS自动化功能测试的开发环境全部准备就绪，也学习了iOS UI控件交互操作的一般性方法，接下来，就可以开始编写自</description></item><item><title>从0到1搭建移动App功能自动化测试平台（2）：操作iOS应用的控件</title><link>https://debugtalk.com/post/build-app-automated-test-platform-from-0-to-1-Appium-interrogate-iOS-UI/</link><pubDate>Sun, 29 May 2016 00:00:00 +0000</pubDate><guid>https://debugtalk.com/post/build-app-automated-test-platform-from-0-to-1-Appium-interrogate-iOS-UI/</guid><description>写在前面 前两天微信突然发来一条系统消息，提示DebugTalk可以开通原创标识了（同时也有了评论功能），虽然一直在期待，但没想到来得这么快，</description></item><item><title>从0到1搭建移动App功能自动化测试平台（1）：模拟器中运行iOS应用</title><link>https://debugtalk.com/archives/%E4%BB%8E0%E5%88%B01%E6%90%AD%E5%BB%BA%E7%A7%BB%E5%8A%A8App%E5%8A%9F%E8%83%BD%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E5%B9%B3%E5%8F%B01%E6%A8%A1%E6%8B%9F%E5%99%A8%E4%B8%AD%E8%BF%90%E8%A1%8CiOS%E5%BA%94%E7%94%A8/</link><pubDate>Sat, 21 May 2016 00:00:00 +0000</pubDate><guid>https://debugtalk.com/archives/%E4%BB%8E0%E5%88%B01%E6%90%AD%E5%BB%BA%E7%A7%BB%E5%8A%A8App%E5%8A%9F%E8%83%BD%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E5%B9%B3%E5%8F%B01%E6%A8%A1%E6%8B%9F%E5%99%A8%E4%B8%AD%E8%BF%90%E8%A1%8CiOS%E5%BA%94%E7%94%A8/</guid><description>在上一篇文章中，我对本系列教程的项目背景进行了介绍，并对自动化测试平台的建设进行了规划。 在本文中，我将在已准备就绪的iOS自动化测试环境的基</description></item></channel></rss>