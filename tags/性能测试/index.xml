<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>性能测试 on DebugTalk</title><link>https://debugtalk.com/tags/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/</link><description>Recent content in 性能测试 on DebugTalk</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Wed, 22 Feb 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://debugtalk.com/tags/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/index.xml" rel="self" type="application/rss+xml"/><item><title>深入浅出开源性能测试工具 Locust（脚本增强）</title><link>https://debugtalk.com/post/head-first-locust-advanced-script/</link><pubDate>Wed, 22 Feb 2017 00:00:00 +0000</pubDate><guid>https://debugtalk.com/post/head-first-locust-advanced-script/</guid><description>在《深入浅出开源性能测试工具Locust（使用篇）》一文中，罗列了编写性能测试脚本时常用的几类脚本增强的场景，本文是对应的代码示例。 关联 在某</description></item><item><title>深入浅出开源性能测试工具 Locust（使用篇）</title><link>https://debugtalk.com/post/head-first-locust-user-guide/</link><pubDate>Wed, 22 Feb 2017 00:00:00 +0000</pubDate><guid>https://debugtalk.com/post/head-first-locust-user-guide/</guid><description>在《【LocustPlus序】漫谈服务端性能测试》中，我对服务端性能测试的基础概念和性能测试工具的基本原理进行了介绍，并且重点推荐了Locu</description></item><item><title>漫谈服务端性能测试</title><link>https://debugtalk.com/post/locustplus-talk-about-performance-test/</link><pubDate>Wed, 02 Nov 2016 00:00:00 +0000</pubDate><guid>https://debugtalk.com/post/locustplus-talk-about-performance-test/</guid><description>最近因为工作原因，我又拾起了老本行，开始做Web性能测试。之前虽然做过三四年的性能测试，但是在博客和开源项目方面都没有什么输出，一直是一个很</description></item><item><title>使用 SIPp 对基于 SIP 协议的 IP 电话通信服务器进行性能测试</title><link>https://debugtalk.com/post/SIPp-IP-Telephone-Server-Performance-Testing/</link><pubDate>Sun, 11 May 2014 00:00:00 +0000</pubDate><guid>https://debugtalk.com/post/SIPp-IP-Telephone-Server-Performance-Testing/</guid><description>背景知识介绍 IP电话 IP电话是指在IP网络上打电话。所谓“IP网络”就是“使用IP协议的分组交换网”的简称。 常见的IP电话有VoIP（Voi</description></item><item><title>LoadRunner 中获取当前系统时间</title><link>https://debugtalk.com/post/loadrunner-get-system-time/</link><pubDate>Mon, 28 Oct 2013 00:00:00 +0000</pubDate><guid>https://debugtalk.com/post/loadrunner-get-system-time/</guid><description>引言 在测试场景中，常会遇到需要提交系统时间的情况。本文对使用LoadRunner获取系统时间的几种方法进行探讨。 常用的方法有如下四种： 方法一</description></item><item><title>测试最大在线用户数</title><link>https://debugtalk.com/post/Evaluate-Largest-Online-Users/</link><pubDate>Thu, 22 Aug 2013 00:00:00 +0000</pubDate><guid>https://debugtalk.com/post/Evaluate-Largest-Online-Users/</guid><description>背景介绍 在性能测试工作中，有时需要对业务系统所能支持的最大在线用户数目进行评估。这与我们接触最多的压力测试不一样，因为用户在线时只是与服务器</description></item><item><title>LoadRuner 中的参数与变量</title><link>https://debugtalk.com/post/loadrunner-parameter-variable/</link><pubDate>Mon, 12 Aug 2013 00:00:00 +0000</pubDate><guid>https://debugtalk.com/post/loadrunner-parameter-variable/</guid><description>在LoadRunner脚本开发中，经常会遇到参数与变量相互转换的情况，本文对常见的转换情形进行了方法总结。 变量的赋值 1 2 3 4 5 6 7 8 9 10 11 12</description></item><item><title>LoadRunner 基于 SOAP 的 WebService 测试方法</title><link>https://debugtalk.com/post/LoadRunner-SOAP-WebService/</link><pubDate>Tue, 06 Aug 2013 00:00:00 +0000</pubDate><guid>https://debugtalk.com/post/LoadRunner-SOAP-WebService/</guid><description>在《LoadRunner基于WSDL的WebService测试方法》一文中，52test.org基于案例天气预报WebService服务，详</description></item><item><title>LoadRunner 基于 WSDL 的 WebService 测试方法</title><link>https://debugtalk.com/post/LoadRunner-WSDL-WebService/</link><pubDate>Fri, 02 Aug 2013 00:00:00 +0000</pubDate><guid>https://debugtalk.com/post/LoadRunner-WSDL-WebService/</guid><description>在《测试工程师的自我修养&amp;ndash;理解WebService》一文中，52test.org对WebService的概念及其相关名词进行了阐</description></item><item><title>性能指标--并发用户数（Concurrent Users）</title><link>https://debugtalk.com/post/performance-index-concurrent-users/</link><pubDate>Wed, 31 Jul 2013 00:00:00 +0000</pubDate><guid>https://debugtalk.com/post/performance-index-concurrent-users/</guid><description>并发用户数是指：在某一时间点，与被测目标系统同时进行交互的客户端用户的数量。 并发用户数有以下几种含义： 并发虚拟用户数（Concurrent Virtual</description></item></channel></rss>